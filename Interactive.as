package {		// Tweener, Flash class and Greate White Papervision3D 2.0	import caurina.transitions.*;		import flash.display.*;	import flash.events.*;	import flash.geom.*;	import flash.net.*;	import flash.text.*;	import flash.ui.Mouse;	import flash.ui.Keyboard;	import flash.utils.Dictionary;	import flash.utils.*;	import fl.video.VideoEvent;	import flash.media.*;	import fl.transitions.*; 	import fl.transitions.easing.*;		import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.TweenLite;    import com.greensock.TweenMax;	import com.greensock.plugins.*;	TweenPlugin.activate([VisiblePlugin, TransformAroundPointPlugin, GlowFilterPlugin, BlurFilterPlugin, TransformAroundCenterPlugin]);	//_________________________________________________ MAIN CLASS		public class Interactive extends MovieClip	{		public var graffiti:icon = new icon();		//public var shaded:shady = new shady();		public var turntable_left:tt_left = new tt_left();		public var turntable_right:tt_right = new tt_right();		public var dirt:grunge = new grunge();		public var player:my_play = new my_play();		public var player_over:playing_over = new playing_over();		public var learner:learning = new learning();		public var learner_over:learning_over = new learning_over();		public var _controlp:homepanel = new homepanel();						//old calls		public var warning:browser_warning = new browser_warning();		public var warning_screen:browser_screen = new browser_screen();		//public var blackout:search = new search();		public var closure:close_out = new close_out();		public var closurephile:close_over = new close_over();		public var closeBtnOut:close_search = new close_search();		public var closeBtnOver:unavailable_over = new unavailable_over();				//___________________________________________________ CONSTRUCTOR: Intial 3D and Start creating Gallery				public function Interactive() {						init();					}				// Inital 3D		public function init():void {						// Align , scale Stage to full fill screen			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			// Reposition element if stage is resized			stage.addEventListener(	Event.RESIZE, rePosition);						// Stretch preloader to fit stage dimension			//preloaderEach.progressBar.width = preloaderEach.backPreloader.width = stage.stageWidth;			displayItem();		}						private function displayItem():void {						addChild(dirt);			dirt.x = stage.stageWidth/2;			dirt.y = stage.stageHeight/2 - 90;			dirt.alpha = 0;			dirt.width = 0;			dirt.height = 0;						addChild(turntable_left);			turntable_left.x = stage.stageWidth/2 - 150;			turntable_left.y = stage.stageHeight/2  - 10;			turntable_left.alpha = 0;			turntable_left.width = 0;			turntable_left.height = 0;						addChild(turntable_right);			turntable_right.x = stage.stageWidth/2 + 150;			turntable_right.y = stage.stageHeight/2 - 10;			turntable_right.alpha = 0;			turntable_right.width = 0;			turntable_right.height = 0;						addChild(graffiti);			graffiti.x = stage.stageWidth/2;			graffiti.y = stage.stageHeight/2 + 80;			graffiti.alpha = 0;			graffiti.width = 0;			graffiti.height = 0;						addChild(_controlp);			_controlp.x = stage.stageWidth/2;			_controlp.y = stage.stageHeight + 60;			_controlp.buttonMode = true;						addChild(learner);			learner.x = stage.stageWidth/2 - 58;			learner.y = stage.stageHeight + 60;			learner.buttonMode = true;			learner.addEventListener(MouseEvent.MOUSE_OVER, learned);						addChild(learner_over);			learner_over.x = stage.stageWidth/2 - 58;			learner_over.y = stage.stageHeight + 60;			learner_over.buttonMode = true;			learner_over.visible = false;			learner_over.addEventListener(MouseEvent.MOUSE_OUT, learnedOut);			learner_over.addEventListener(MouseEvent.CLICK, knowledge);						addChild(player);			player.x = stage.stageWidth/2 + 70;			player.y = stage.stageHeight + 60;			player.buttonMode = true;			player.addEventListener(MouseEvent.MOUSE_OVER, played);						addChild(player_over);			player_over.x = stage.stageWidth/2 + 71;			player_over.y = stage.stageHeight + 60;			player_over.buttonMode = true;			player_over.visible = false;			player_over.addEventListener(MouseEvent.MOUSE_OUT, playedOut);			player_over.addEventListener(MouseEvent.CLICK, letsGo);						Tweener.addTween(dirt,{alpha: 0.35, time: 1, transition: "Strong.easeOut"});			TweenLite.to(dirt, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .8, ease:Expo.easeInOut});			Tweener.addTween(graffiti,{alpha: 1, time: 1, transition: "Strong.easeOut"});			TweenLite.to(graffiti, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: 1.2, ease:Expo.easeInOut});			Tweener.addTween(turntable_left,{alpha: 1, time: 1, transition: "Strong.easeOut"});			TweenLite.to(turntable_left, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .5, ease:Expo.easeInOut});			Tweener.addTween(turntable_right,{alpha: 1, time: 1, transition: "Strong.easeOut"});			TweenLite.to(turntable_right, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .65, ease:Expo.easeInOut});						Tweener.addTween(_controlp, {y: stage.stageHeight-60, alpha: 1, time: 1, delay: 1.12, transition: "Elastic.easeInOut"});			Tweener.addTween(learner, {y: stage.stageHeight-60, alpha: 1, time: 1, delay: 1.12, transition: "Elastic.easeInOut"});			Tweener.addTween(learner_over, {y: stage.stageHeight-60, alpha: 1, time: 1, delay: 1.12, transition: "Elastic.easeInOut"});			Tweener.addTween(player, {y: stage.stageHeight-60, alpha: 1, time: 1, delay: 1.12, transition: "Elastic.easeInOut"});			Tweener.addTween(player_over, {y: stage.stageHeight-60, alpha: 1, time: 1, delay: 1.12, transition: "Elastic.easeInOut"});					}				public function learned(e:Event):void {						learner.visible = false;			learner_over.visible = true;					}				public function learnedOut(e:Event):void {						learner_over.visible = false;			learner.visible = true;					}				private function knowledge(e:Event):void {						var request:URLRequest=new URLRequest("information.html");			navigateToURL(request,"_parent");					}				public function played(e:Event):void {						player.visible = false;			player_over.visible = true;					}				public function playedOut(e:Event):void {						player_over.visible = false;			player.visible = true;					}						private function letsGo(e:Event):void {						var request:URLRequest=new URLRequest("logon.php");			navigateToURL(request,"_parent");					}				//__________________________________________ LOADING PROGRESS ( FULL VERSION )		/*		private function startPreloading(e:Event):void		{			// Easing preloading update data			addEventListener(Event.ENTER_FRAME, progressUpdate);		}				private function progressUpdate(e:Event):void		{			preloaderEach.progressBar.width += (bytesLoaded / bytesTotal * stage.stageWidth - preloaderEach.progressBar.width) * 0.1;			if (preloaderEach.progressBar.width / stage.stageWidth >= 0.99) fullLoaded();			}				private function progressData(e:Event):void		{			bytesLoaded = e.target.bytesLoaded;			bytesTotal = e.target.bytesTotal;		}		*/		//__________________________________________ REPOSITION				private function rePosition(e:Event):void		{			preloaderEach.progressBar.width = preloaderEach.backPreloader.width = stage.stageWidth;						dirt.x = stage.stageWidth/2;			dirt.y = stage.stageHeight/2 - 90;			turntable_left.x = stage.stageWidth/2 - 150;			turntable_left.y = stage.stageHeight/2 - 10;			turntable_right.x = stage.stageWidth/2 + 150;			turntable_right.y = stage.stageHeight/2 - 10;			graffiti.x = stage.stageWidth/2;			graffiti.y = stage.stageHeight/2 + 80;			_controlp.x = stage.stageWidth/2;			_controlp.y = stage.stageHeight - 60;			learner.x = stage.stageWidth/2 - 58;			learner.y = stage.stageHeight - 60;			learner_over.x = stage.stageWidth/2 - 58;			learner_over.y = stage.stageHeight - 60;			player.x = stage.stageWidth/2 + 70;			player.y = stage.stageHeight - 60;			player_over.x = stage.stageWidth/2 + 71;			player_over.y = stage.stageHeight - 60;						window_resize();		}								public function window_resize():void {			if (stage.stageWidth<=1000) {								 // (|| stage.stageHeight<=595) second part of the if statement leaving just in case...								addChild(warning_screen);				warning_screen.x = stage.stageWidth/2;				warning_screen.y = stage.stageHeight/2;				warning_screen.visible = true;				//warning_screen.scaleMode = StageScaleMode.NO_SCALE;								addChild(warning);				warning.x = stage.stageWidth/2;				warning.y = stage.stageHeight/2;				warning.visible = true;								//trace(warning_screen.x);				//trace(warning_screen.y);								TransitionManager.start(warning, {type:Zoom, direction:Transition.IN, duration:1, easing:Bounce.easeOut});				//TransitionManager.start(warning_screen, {type:Zoom, direction:Transition.IN, duration:1, easing:Bounce.easeOut});			} else						warning_screen.visible = false;			warning.visible = false;					}					}}