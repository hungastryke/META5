package com.webdevils.display {	import flash.display.*;	import flash.events.*;	import caurina.transitions.Tweener;	import caurina.transitions.properties.DisplayShortcuts;		public class CircleMask extends BasicLoader {		public static const TRANSITION_FINISHED:String = "transitionfinished";		private var image_width:Number;		private var image_height:Number;				private var mask_sprite:Sprite;		private var content_sprite:Sprite;				private var spot_array:Array;				private var spot_radius:Number;		private var time:Number;				public function CircleMask( url:String = null, _time:Number = 1 ) {			DisplayShortcuts.init();						content_sprite = new Sprite();			mask_sprite = new Sprite();			addChild( content_sprite );			addChild( mask_sprite );						content_sprite.mask = mask_sprite;						spot_radius = 20						time = _time;			if ( url != null ) {				load( url );			}		}				protected override function on_complete( e:Event ):void {			dispatchEvent( new Event( e.type, e.bubbles, e.cancelable ) );			var loader 		= e.target;			image_width 	= loader.content.width;			image_height 	= loader.content.height;						spot_array = new Array();			content_sprite.addChild( loader.content );						var inc =  spot_radius * 1 / Math.sqrt( 2 );						var cols = Math.ceil( image_width / ( inc * 2 ) );			var rows = Math.ceil( image_height / ( inc * 2 ) );						var count = cols * rows;			var time_cols = time / rows;						for ( var i:uint = 0; i < count; i++ ) {				var _sprite:Sprite = new Sprite();				_sprite.graphics.beginFill( 0x000000, .5 );				_sprite.graphics.drawEllipse( -spot_radius, -spot_radius, spot_radius * 2, spot_radius * 2 );				_sprite.graphics.endFill();				_sprite.x = ( ( i % cols ) * inc * 2 ) + inc;				_sprite.y = ( Math.floor( i / cols ) * inc * 2 ) + inc;				_sprite.scaleX = _sprite.scaleY = 0;				mask_sprite.addChild( _sprite );				spot_array.push( _sprite );				var d = ( i % cols ) * time_cols;				Tweener.addTween( _sprite, { _scale:1, time:time, delay:d } );			}			Tweener.addTween( _sprite, { time:d + time, onComplete:transition_complete } );		}				private function transition_complete():void {			content_sprite.mask = null;			removeChild( mask_sprite );		}	}}