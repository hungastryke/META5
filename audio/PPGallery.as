package {		// Tweener, Flash class and Greate White Papervision3D 2.0	import caurina.transitions.*;	import flash.display.*;	import flash.display.Stage;	import flash.events.*;	import flash.geom.*;	import flash.net.*;	import flash.text.*;	import flash.ui.Mouse;	import flash.utils.Dictionary;	import flash.text.TextFormat;	import flash.utils.ByteArray;	import fl.transitions.*; 	import fl.transitions.easing.*;	import flash.utils.Timer;	import flash.utils.getTimer;	import flash.events.TimerEvent;		//sound import	import flash.media.*;			import org.papervision3d.*;	import org.papervision3d.cameras.*;	import org.papervision3d.events.InteractiveScene3DEvent;	import org.papervision3d.materials.*;	import org.papervision3d.objects.primitives.Plane;	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.scenes.Scene3D;	import org.papervision3d.view.Viewport3D;	import com.rimv.net.Meta5data;	import com.rimv.net.Meta5dataSearch;	import com.rimv.net.AudioPlayer;	import com.rimv.net.AudioPlayerView;	import com.rimv.SongList;	import com.rimv.SongListItem;	import com.rimv.DescBoard;	import com.rimv.net.Search;		import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.TweenLite;    import com.greensock.TweenMax;	import com.greensock.plugins.*;	TweenPlugin.activate([VisiblePlugin, TransformAroundPointPlugin, GlowFilterPlugin, BlurFilterPlugin, TransformAroundCenterPlugin]);		//_________________________________________________ MAIN CLASS		public class PPGallery extends MovieClip	{		//------------------------ PARAMETERS -----------------------//		// Tweening parameters, more Tweener information at:		// http://hosted.zeh.com.br/tweener/docs/en-us/		private var easeFactor:Number = 0.01; // easing of camera's orientation 		private var cameraTweenTime:Number = 2;		private var cameraTweenEasing:String = "easeOutQuint";		private var scrubberTweenTime:Number = 1;		private var planeTweenTime:Number = 2;		private var planeTweenEasing:String = "easeOutQuint";				// Gallery property		private var itemDistance:Number = 700;		private var itemAngle:Number = 20;				// Drag speed		private var dragSpeed:Number = 0.05;				// Camera Default property		private var cameraZMin:Number = 250;		private var cameraY:Number = 0;		private var cameraZDefault:Number = -600;		// camera angle delta		private var CAMDELTA:Number = 20;				// Plane infor		private var planeDoubleSide:Boolean = false;		private var planeSmooth:Boolean = true;		private var planePrecise:Boolean = true;		private var transparent:Boolean = false;		private var quality:Number = 1;				// Reflection		private var reflection:Boolean = true; // turn on/off reflection		private var refDist:Number = 150;  	//Distance from image to its corresponding reflection		private var refCateDist:Number = 500;  	//Distance from category image to its corresponding reflection		private var refIn1:Number = 0.5;	// Reflection Intensity 1		private var refIn2:Number = 0;		// Reflection Intensity 2		private var refDen1:Number = 0;		// Reflection Density 1		private var refDen2:Number = 100;	// Reflection Density 2		private var refSmooth:Boolean = false;	// Smooth Reflection		private var refDoubleSide:Boolean = false;	// 2 side Reflection				// XML/CSS path		private var mainXML:String = "functions.php";	// XML path				private var css_path:String = "css/styles.css" // CSS path				//--------------- end of -- PARAMETERS -----------------------//								//------------------------ 3D VARS --------------------------//				private var scene:Scene3D = new Scene3D();				private var camera:FreeCamera3D = new FreeCamera3D();		private var cameraZoom:Number = 4.5;		private var viewport:Viewport3D;		private var renderer:BasicRenderEngine = new BasicRenderEngine();						//--------------- end of -- 3D VARS -----------------------//				//------------------------ GENERAL DATA --------------------------//				private var TOTAL:Number; 	// Number of images/videos/mp3s		private var description:Array = new Array();								//------------------------ GENERAL DATA --------------------------//							//------------------------ MISC VARS -----------------------//		private var cID:Number = 0;	// Current pressed plane ID		private var currentPlane:Plane;		private var currentItem:Number = -1;		private var currentPhoto:Number = undefined;		private var currentLoader:Loader;		private var bytesLoaded:Number = 0;		private var bytesTotal:Number = 1;		private var targetX:Number;		private var maxX:Number;		private var dragMode:Boolean = false;		private var openMode:Boolean = false;		private var count:Number = 0;		private var handMode:MovieClip;		private var items:Array = new Array();		private var itemInfor:Dictionary = new Dictionary();		private var cameraCenter:Number;		private var itemRollOver:Boolean = false;		private var descBoardRollOver:Boolean = false;		private var itemSelected:Boolean = false;		private var demoEnded:Boolean = false;		private var css:StyleSheet = new StyleSheet(); // StyleSheet				//meta5 class		private var meta5:Meta5data;		//meta5Search class		private var meta5Search:Meta5dataSearch;				//audioplayerview class		private var audio:AudioPlayerView;				//sound vars		private var snd:Array = new Array();		private var chan:SoundChannel;		private var isPlaying:Boolean = false;		private var position:int;		private var curPos:Number;		public var curSnd:Number;		public var tempSnd:Number;		public var audioCount:Number;		private var songURL:String;		public var dragging:Boolean = false;		public var isSearch:Boolean = false ;				//------------------------ MISC VARS -----------------------//				//public var graffiti:my_graffiti = new my_graffiti();		public var info:footer = new footer();		public var descBoard:descBoard3 = new descBoard3();		public var menu_close:controlClose = new controlClose();		public var menu:controlled = new controlled();		public var audiophile:audio_file = new audio_file();		public var audiophile_selected:audio_over = new audio_over();		public var videophile:video_file = new video_file();		public var searchphile:search_file = new search_file();		public var helphile:help_file = new help_file();		public var uploadphile:upload_file = new upload_file();		public var helphile_over:help_file_over = new help_file_over();		public var videophile_over:video_over = new video_over();		public var searchphile_over:search_over = new search_over();		public var searching:search_over = new search_over();		public var uploadphile_over:upload_over = new upload_over();		public var forward:nav_forward = new nav_forward();		public var backward:nav_backward = new nav_backward();		//public var search:searchBar = new searchBar();		public var close_mc:closing = new closing();		public var _controlp:cpanel = new cpanel();		//public var _searchp:spanel = new spanel();		public var warning:browser_warning = new browser_warning();		public var warning_screen:browser_screen = new browser_screen();		public var closure:close_out = new close_out();		public var closurephile:close_over = new close_over();		public var closeBtnOut:close_search = new close_search();		public var closeBtnOver:unavailable_over = new unavailable_over();		public var nav:simonnav = new simonnav();		public var _searchOut:searchbtn_out = new searchbtn_out();		public var _searchOver:searchbtn_over = new searchbtn_over();		public var uploadURL:URLRequest;        public var file:FileReference;				//___________________________________________________ CONSTRUCTOR: Intial 3D and Start creating Gallery				public function PPGallery()		{			// Initial 3d environment			Initial3D();						// Create 3D Gallery			create3DGallery();						position = 1;					}				// Inital 3D		public function Initial3D():void		{			// Align , scale Stage to full fill screen			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;						buttonMode = true;			// Reposition element if stage is resized			stage.addEventListener(	Event.RESIZE, rePosition);						// Add Mouse Cursor			handMode = hand;			handDrag.visible = false;			Mouse.hide();			stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMove);						// Stretch preloader to fit stage dimension			//preloaderEach.progressBar.width = preloaderEach.backPreloader.width = stage.stageWidth;						// Tempary remove components			//removeChild(preloaderFull);					//removeChild(preloaderEach);			removeChild(fullDescription);			fullDescription.content.width = stage.stageWidth - 5;			fullDescription.back.width = stage.stageWidth;			fullDescription.content.autoSize = TextFieldAutoSize.LEFT;			fullDescription.alpha = .5;						//menu close			addChild(menu_close);			menu_close.x = stage.stageWidth - 30;			menu_close.y = stage.stageHeight/2 + 350;			menu_close.addEventListener(MouseEvent.MOUSE_DOWN, hideMenu);			menu_close.addEventListener(MouseEvent.MOUSE_OVER, MenuOver);			menu_close.addEventListener(MouseEvent.MOUSE_OUT, MenuOut);			menu_close.alpha = 0;			menu_close.visible = false;						//search is invisible			search.visible = false;						// Viewport			viewport = new Viewport3D(stage.stageWidth, stage.stageHeight, true, true);			addChild(viewport);			viewport.y = (stage.stageHeight/2)*(-(0.1));//14084507042253521;////(stage.stageHeight/2) - 420;						// Camera 3D			camera.zoom = cameraZoom;			camera.y = 0;			camera.z = cameraZDefault;			camera.x = -stage.stageWidth;						// preloader			//preloaderFull.x = stage.stageWidth / 2;			//preloaderFull.y = stage.stageHeight / 2; 			//preloaderEach.x = 0;			//preloaderEach.y = stage.stageHeight / 2;						// init Stylesheet			initStyleSheet();		}		//***PLAYLIST SEARCH FUNCTIONS***		// Create SEARCH RESULTS FOR Gallery		public function search3DGallery(_searchString:String):void 		{			meta5Search = new Meta5dataSearch(_searchString);			meta5Search.addEventListener( Event.COMPLETE, make_gallery_search );			isSearch = true ;		}				public function make_gallery_search( e:Event ):void {						var it = meta5Search.getCollection().iterator();						TOTAL = meta5Search.getCollection().length;			removeChild(preloaderFull);			trace("TOTAL=" + TOTAL) ;			/*addChild(preloaderFull);			preloaderFull.loadText.text = "Loading Asset: 0/" + TOTAL;*/			//***LOOP OVER			var _numCrrntLists:int = meta5.getCollection().length ;			for (var i:int = 0; i <= _numCrrntLists  ; i++) {				scene.removeChildByName("item" + i) ;				scene.removeChildByName("reflection" + i) ;			}						//itemInfor = new Dictionary();			if(TOTAL > 0){				i=0;				while( it.hasNext() ){										var obj = it.next();					var myLoader:Loader = new Loader();					var myRequest:URLRequest = new URLRequest( obj.thumb );										myLoader.load( myRequest );					myLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, itemLoaded );					itemInfor[ myLoader ] = i;										i++;					camera.x = stage.stageWidth/2.057142857142857;									}				//			}					}		//****END SEARCH FUNCTIONS***		// Create Gallery		public function create3DGallery():void 		{			meta5 = new Meta5data();			meta5.addEventListener( Event.COMPLETE, make_gallery );			addChild(preloaderFull);			preloaderFull.loadText.text = "Locked & Loading!";			isSearch = false ;		}						public function make_gallery( e:Event ):void {						var it = meta5.getCollection().iterator();						TOTAL = meta5.getCollection().length;			trace("Gallery: " + TOTAL) ;			//removeChild(preloaderFull);			/*addChild(preloaderFull);			preloaderFull.loadText.text = "Loading Asset: 0/" + TOTAL;*/			var i=0;			while( it.hasNext() ){								var obj = it.next();				var myLoader:Loader = new Loader();				var myRequest:URLRequest = new URLRequest( obj.thumb );				myLoader.load( myRequest );				myLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, itemLoaded );				itemInfor[ myLoader ] = i;				trace(itemInfor[ myLoader ]) ;				i++;							}					}				public function arrowDisplay():void {						for (var i:uint = 0; i < TOTAL; i++) {								if (currentItem == TOTAL-1) {										forward.visible = false;					Tweener.addTween(forward, {alpha: 0, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});									}else{										forward.visible = true;					Tweener.addTween(forward, {alpha: 1, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});									}								if (currentItem == 0) {										backward.visible = false;					Tweener.addTween(backward, {alpha: 0, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});									}else{										backward.visible = true;					Tweener.addTween(backward, {alpha: 1, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});									}			}						trace("total:" +TOTAL);			trace("current item is:" +currentItem);					}				//need to redo this again to where it will display the data from the Collection class		private function displayItem(index:Number):void		{			control();			searchcontrol();			arrowDisplay();						// var descBoard = new DescBoard();			descBoard.alpha = 0;			descBoard.visible = true;			descBoard.x = stage.stageWidth / 2 + 239; //stage.stageWidth / 2 + 80			descBoard.y = stage.stageHeight / 2 - 42; //stage.stageHeight / 2 - 55			descBoard.width = 6;			descBoard.height = 3.5;						descBoard.tt_left.alpha = 0;			descBoard.tt_left.width = 0;			descBoard.tt_left.height = 0;						descBoard.tt_right.alpha = 0;			descBoard.tt_right.width = 0;			descBoard.tt_right.height = 0;						descBoard.grunge.alpha = 0;			descBoard.grunge.width = 0;			descBoard.grunge.height = 0;						//logo			descBoard.logo.width = 0;			descBoard.logo.height = 0;			descBoard.logo.alpha = 0;			var obj = meta5.getCollection().getItem( index );						if(isSearch)				obj = meta5Search.getCollection().getItem( index );						//var obj = meta5.getCollection().getItem( index );			descBoard.title.text = obj.title;			descBoard.album.text =  obj.caption;			descBoard.recording.text = obj.recording;			descBoard.desc_mc.scroll_txt.text = obj.description;									//progressBar			//descBoard.seekBar.mode = ProgressBarMode.MANUAL;			//descBoard.seekBar.setProgress(ns.time, meta.duration);									var track_it = obj.track_list.iterator();			var track_array = new Array();			while( track_it.hasNext() ) {				var track_obj = track_it.next();				var num = track_obj.number;				var time = track_obj.time;				var title = track_obj.title;				title.substr(0,10);				var url = track_obj.url;								var track_item = new SongListItem( title, num, url );				track_array.push( track_item );			}						descBoard.set_songlist( track_array );						BitmapMaterial(currentPlane.material).precise = false;			BitmapMaterial(currentPlane.material).smooth = false;			var p:Plane = scene.getChildByName("item" + index) as Plane;			currentPlane = p;			BitmapMaterial(currentPlane.material).precise = planePrecise;			BitmapMaterial(currentPlane.material).smooth = planeSmooth;			itemSelected = true;						// Bring Back other item			for (var i:uint = 0; i < TOTAL; i++)				if (i != index)				{					var p1:Plane = scene.getChildByName("item" + i) as Plane;					Tweener.addTween([p1, p1.extra.reflection],										{	z:600,											time:1,											onUpdate:function():void											{												renderer.renderScene(scene, camera, viewport);													}										});					}							// remove camera rotation --> this is where the camera behaves when selected			stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);			Tweener.addTween(camera,{	rotationX: 0,										rotationY: itemAngle,										x:p.x+130,										z:-500,										y:0,										time:2,										onUpdate:function():void										{											// Render 3D											renderer.renderScene(scene, camera, viewport);																					}									});											Tweener.addTween(descBoard,{alpha: 1, delay: .95, time: 2, transition: "Strong.easeOut"});				TweenLite.to(descBoard, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, ease:Expo.easeInOut});				TweenMax.to(descBoard, 0.5, {blurFilter:{blurX:20, remove:true}, ease:Bounce.easeInOut});				TweenLite.to(descBoard, 2, {visible:true});				Tweener.addTween([currentPlane, currentPlane.extra.reflection],{ z:0, time:1 });				Tweener.addTween(descBoard.tt_left,{alpha: 1, time: 1, transition: "Strong.easeOut"});				TweenLite.to(descBoard.tt_left, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .5, ease:Expo.easeInOut});				Tweener.addTween(descBoard.tt_right,{alpha: 1, time: 1, transition: "Strong.easeOut"});				TweenLite.to(descBoard.tt_right, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .65, ease:Expo.easeInOut});				Tweener.addTween(descBoard.grunge,{alpha: 0.65, time: 1, transition: "Strong.easeOut"});				TweenLite.to(descBoard.grunge, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, delay: .8, ease:Expo.easeInOut});				TweenMax.to(descBoard.controlbar, 1, {glowFilter:{color:0x3e94d4, alpha:1, blurX:20, blurY:20}}); //0x91e600								// logo tween				Tweener.addTween(descBoard.logo,{alpha: 1, time: 1, transition: "Strong.easeOut"});				TweenLite.to(descBoard.logo, 1, {transformAroundCenter:{scaleX:1, scaleY:1}, ease:Expo.easeInOut});										}						// Go Back To Main		private function goBackToMain(e:Event):void		{						var ob = e.target;			// Hide description and full item			Tweener.addTween(fullDescription, {y:stage.stageHeight, time:1});			Tweener.addTween(ob, {	alpha:0,									time:1,									onComplete:function():void									{										ob.visible = false;										openMode = false;									}									});			// Show 3d plane			for (var i:uint = 0; i < TOTAL; i++)			{				var p = scene.getChildByName("item" + i) as Plane;				Tweener.addTween([p, p.extra.reflection], 									{	rotationY:0,										time:2,										onUpdate:function():void												{													// Render 3D													renderer.renderScene(scene, camera, viewport);												}									});			}			handMode = hand;			Mouse.show();			descBoard.alpha = 0;			descBoard.visible = true;			Tweener.addTween(descBoard,	{	alpha:1});						Tweener.addTween(forward, {alpha: 0, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});			Tweener.addTween(backward, {alpha: 0, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});			descBoard.desc_mc.visible = true;			descBoard.desc_mc.drag_mc.addEventListener(MouseEvent.MOUSE_UP, downwardDog);			descBoard.desc_mc.drag_mc.addEventListener(MouseEvent.MOUSE_DOWN, downwardDog);			descBoard.desc_mc.drag_mc.addEventListener(MouseEvent.CLICK, downwardDog);			descBoard.title.visible = true;			descBoard.album.visible = true;			descBoard.desc_mc.alpha = 0;			descBoard.title.alpha = 0;			descBoard.album.alpha = 0;		}						//___________________________________________ ITEM LOADED				// Category image loaded create 3d plane		private function itemLoaded(e:Event):void		{			var image:Loader = e.target.loader;						// retrieve thumbnail			var loadedObject:Loader = e.target.loader;									// Bitmapdata			var bmpData:BitmapData = new BitmapData( loadedObject.width, loadedObject.height, transparent, 0x000000 );			bmpData.draw(loadedObject);						//Bitmap Material			var bitmapMaterial:BitmapMaterial = new BitmapMaterial(bmpData);			bitmapMaterial.precise = false;			bitmapMaterial.interactive = true;			bitmapMaterial.doubleSided = planeDoubleSide;			bitmapMaterial.smooth = false;			bitmapMaterial.name = "material";						// Create category plane			var p:Plane = new Plane(bitmapMaterial, loadedObject.width, loadedObject.height, quality, quality);									//retrieve index			var index:Number = itemInfor[loadedObject];								// add to scen						scene.addChild( p, "item" + index );			trace("item" + index) ;						// data embeded in each plane			p.extra = {				index:new Number			}						// save index for later reference			p.extra.index = index;			p.x = index * itemDistance;															//______________________________________________________________ REFLECTION						if (reflection) 			{				// save reflection for later use				p.extra.reflection = new Plane();								// Create new reflection Bitmap Data 				var bitmapData2:BitmapData = new BitmapData( loadedObject.width, loadedObject.height, true, 0x000000);								// Flip vertical				var m:Matrix = new Matrix();				m.createBox(1, -1, 0, 0, loadedObject.height);				bitmapData2.draw( bmpData, m );								//Reflection Bitmap Object				var b2:Bitmap = new Bitmap(bitmapData2);								// Reflection mask				m.createGradientBox(loadedObject.width, loadedObject.height, Math.PI/2, loadedObject.height);				var mymask:Shape = new Shape();				mymask.graphics.lineStyle(0,0,0);				mymask.graphics.beginGradientFill("linear", [0x000000, 0x000000],[refIn1, refIn2], [refDen1, refDen2],m) ;				mymask.graphics.lineTo(0, loadedObject.height);				mymask.graphics.lineTo(loadedObject.width, loadedObject.height);				mymask.graphics.lineTo(loadedObject.width, 0)				mymask.graphics.lineTo(0, 0)				mymask.graphics.endFill();								// CacheaAsBitmap				mymask.cacheAsBitmap = true;				b2.cacheAsBitmap = true;								// Create mask				b2.mask = mymask;				addChild(b2);				addChild(mymask);								var bmp3:BitmapData = new BitmapData(loadedObject.width, loadedObject.height, true, 0x000000);				bmp3.draw(b2);				// Create Reflection plane				var bm2:BitmapMaterial = new BitmapMaterial(bmp3);				bm2.precise = false;				bm2.doubleSided = false;				bm2.smooth = false;				var p2:Plane = new Plane(bm2, loadedObject.width, loadedObject.height, quality, quality);								p2.x = p.x;				p2.z = p.z				p2.y = -refCateDist + p.y;				p.extra.reflection = p2;								scene.addChild(p2,"reflection" + index);				removeChild(b2);				removeChild(mymask);			}									// Interactive Roll Over, Roll Out, Press/Release			p.addEventListener( InteractiveScene3DEvent.OBJECT_RELEASE, onItemRelease, false, 0, true );			p.addEventListener( InteractiveScene3DEvent.OBJECT_OVER, onItemRollOver, false, 0, true );			p.addEventListener( InteractiveScene3DEvent.OBJECT_OUT, onItemRollOut, false, 0, true );			currentPlane = p;											//preloaderFull.loadText.text = "Loading Asset: " + (count + 1) + "/" + TOTAL;						// Finish loading, add interactive			if (++count == TOTAL) 			{				maxX = (TOTAL - 1) * itemDistance;				// Remove preloader				//removeChild(preloaderFull);				trace("what the fuck?");								// Add descBoard button function				descBoard.addEventListener(MouseEvent.MOUSE_OVER, descBoardOver);				descBoard.addEventListener(MouseEvent.MOUSE_OUT, descBoardOut);				//close button				descBoard.close_button.addEventListener( MouseEvent.MOUSE_DOWN, closeUp );				descBoard.close_button.addEventListener( MouseEvent.MOUSE_OVER, closeOver );				descBoard.close_button.addEventListener( MouseEvent.MOUSE_OUT, closeOut );				descBoard.close_button.buttonMode = true;				descBoard.close_button.mouseChildren = false;				descBoard.close_button.stop();				descBoard.play_mc.addEventListener(MouseEvent.CLICK, stayHere);				descBoard.pause_mc.addEventListener(MouseEvent.CLICK, stayHere);								setupStageMouseDown();				setupStageMouseUp();				control();				openEffect();				controlMenu();			}			}				public function control():void {						// load and tween control tweens here			Tweener.addTween(helphile, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(helphile_over, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(audiophile, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(audiophile_selected, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(videophile, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(videophile_over, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(searchphile, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(searchphile_over, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(searching, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(uploadphile, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(uploadphile_over, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(_controlp, {y: stage.stageHeight-50, alpha: 1, time: .5, delay: .40, transition: "Elastic.easeInOut"});			TweenMax.to(_controlp, 1, {glowFilter:{color:0x666666, alpha:1, blurX:10, blurY:10}}); //0x91e600			forward.visible = false;			backward.visible = false;			Tweener.addTween(forward, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(backward, {y: stage.stageHeight-50, time: .5, delay: .35, transition: "Elastic.easeInOut"});					}				public function controlOut():void {						// load and tween control tweens here			Tweener.addTween(helphile, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(helphile_over, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(audiophile, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(audiophile_selected, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(videophile, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(videophile_over, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(searchphile, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(searchphile_over, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(searching, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(uploadphile, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(uploadphile_over, {y: stage.stageHeight+50, time: .5, delay: .4, transition: "Elastic.easeInOut"});			Tweener.addTween(_controlp, {y: stage.stageHeight+50, alpha: 1, time: .5, delay: 0.4, transition: "Elastic.easeInOut"});			forward.visible = false;			backward.visible = false;			Tweener.addTween(forward, {y: stage.stageHeight+50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(backward, {y: stage.stageHeight+50, time: .5, delay: .35, transition: "Elastic.easeInOut"});			TweenMax.to(_controlp, 1, {glowFilter:{color:0x666666, alpha:0, blurX:10, blurY:10}}); //0x91e600					}				public function searchcontrol():void {						Tweener.addTween(search, {y: stage.stageHeight+50, alpha: 1, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(_searchOut, {y: stage.stageHeight+55, alpha: 1, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(_searchOver, {y: stage.stageHeight+55, alpha: 1, time: .5, delay: .35, transition: "Elastic.easeInOut"});			Tweener.addTween(close_mc, {y: stage.stageHeight+55, alpha: 1, time: .5, delay: .35, transition: "Elastic.easeInOut"});								}				// Start Menu Controls Interactive				// DESC BOARD				private function descBoardOver(e:Event):void		{			if (!openMode)			{				Mouse.show();				handMode.visible = false;				stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);				stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);				descBoard.close_button.stop();						}			}				private function descBoardOut(e:Event):void		{			if (!openMode)			{				Mouse.hide();				handMode.visible = true;				descBoard.close_button.stop();						}		}				private function stayHere(e:Event):void		{			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);		}						// PREVIOUS		private function PreviousItem(e:Event):void		{			if (currentItem > 0) displayItem(--currentItem);			descBoard.close_button.stop();		}				private function PreviousOver(e:Event):void		{			descBoardRollOver = true;			e.target.gotoAndPlay(2);		}				private function PreviousOut(e:Event):void		{			descBoardRollOver = false;			e.target.gotoAndPlay(21);		}				private function backOver(e:Event):void		{			descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			arrowDisplay();			descBoard.close_button.stop();			TweenMax.to(backward, 1, {glowFilter:{color:0x0099cc, alpha:1, blurX:10, blurY:10}}); //0x91e600					}				private function backOut(e:Event):void		{			descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			backward.visible = true;			arrowDisplay();			descBoard.close_button.stop();			TweenMax.to(backward, 1, {glowFilter:{color:0x0099cc, alpha:0, blurX:10, blurY:10}}); //0x91e600					}						// NEXT		private function NextItem(e:Event):void		{			if (currentItem < TOTAL - 1) displayItem(++currentItem);			descBoard.close_button.stop();						}				private function NextOver(e:Event):void		{			descBoardRollOver = true;			e.target.gotoAndPlay(2);			descBoard.close_button.stop();					}				private function NextOut(e:Event):void		{			descBoardRollOver = false;			e.target.gotoAndPlay(21);			descBoard.close_button.stop();					}				private function forwardOver(e:Event):void		{			descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			arrowDisplay();			descBoard.close_button.stop();			TweenMax.to(forward, 1, {glowFilter:{color:0x0099cc, alpha:1, blurX:10, blurY:10}}); //0x91e600					}				private function forwardOut(e:Event):void		{			descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			arrowDisplay();			descBoard.close_button.stop();			TweenMax.to(forward, 1, {glowFilter:{color:0x0099cc, alpha:0, blurX:10, blurY:10}}); //0x91e600					}				// menu controls tween effects start here		private function helpOver(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			helphile.visible = false;			helphile_over.visible = true;			TweenMax.to(helphile_over, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				private function helpOut(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			helphile.visible = true;			helphile_over.visible = false;					}						private function home_page(e:Event):void {						var request:URLRequest=new URLRequest("../information.html");			navigateToURL(request,"_parent");			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);					}				private function audioOver(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			audiophile.visible = false;			audiophile_selected.visible = true;			TweenMax.to(audiophile_selected, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				private function audioOut(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			audiophile.visible = true;			audiophile_selected.visible = false;					}				private function audio_page(e:Event):void {						var request:URLRequest=new URLRequest("index.php");			navigateToURL(request,"_parent");			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);					}				private function videoOver(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			videophile.visible = false;			videophile_over.visible = true;			TweenMax.to(videophile_over, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				private function videoOut(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			videophile.visible = true;			videophile_over.visible = false;					}				private function video_page(e:Event):void {						var request:URLRequest=new URLRequest("../video/index.php");			navigateToURL(request,"_parent");			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);					}				private function uploadOver(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			uploadphile.visible = false;			uploadphile_over.visible = true;			TweenMax.to(uploadphile_over, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				private function uploadOut(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			uploadphile.visible = true;			uploadphile_over.visible = false;					}						private function upload_page(e:Event):void {						var request:URLRequest=new URLRequest("../uploads.html");			navigateToURL(request,"_parent");			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);					}				public function downwardDog(e:Event):void {						stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);			stage.removeEventListener(MouseEvent.CLICK, stageUp);			stage.removeEventListener(MouseEvent.CLICK, stageDown);								}				private function searchOver(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			searchphile.visible = false;			searchphile_over.visible = true;			TweenMax.to(searchphile_over, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				private function searchOut(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			searchphile.visible = true;			searchphile_over.visible = false;					}				public function searchMc(e:Event):void {						trace(search.y);			search.visible = true;			search.alpha = 1;			Tweener.addTween(search, {y: stage.stageHeight-50, alpha: 1, time: 1, delay: 0.75, transition: "Elastic.easeInOut"});			Tweener.addTween(_searchOut, {y: stage.stageHeight-52, alpha: 1, time: 1, delay: 0.75, transition: "Elastic.easeInOut"});			Tweener.addTween(_searchOver, {y: stage.stageHeight-52, alpha: 1, time: 1, delay: 0.75, transition: "Elastic.easeInOut"});			Tweener.addTween(close_mc, {y: stage.stageHeight-52, alpha: 1, time: 1, delay: .8, transition: "Elastic.easeInOut"});			controlOut();			_searchOut.visible = true;			_searchOut.alpha = 1;			close_mc.visible = true;			close_mc.alpha = 1;			close_mc.addEventListener(MouseEvent.MOUSE_OVER, overBar);			close_mc.addEventListener(MouseEvent.MOUSE_OUT, outBar);			close_mc.addEventListener(MouseEvent.CLICK, hideBar);						stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);			stage.removeEventListener(MouseEvent.CLICK, stageUp);			stage.removeEventListener(MouseEvent.CLICK, stageDown);					}				public function mySearchOver(e:Event):void {						TweenMax.to(_searchOut, 1, {glowFilter:{color:0xc9def8, alpha:1, blurX:15, blurY:15}}); //0x91e600					}				public function mySearchOut(e:Event):void {						TweenMax.to(_searchOut, 1, {glowFilter:{color:0xc9def8, alpha:0, blurX:15, blurY:15}}); //0x91e600					}				public function mySearchDown(e:Event):void {			position = 1;			search3DGallery(search.search_txt.text);						descBoardRollOver = true;			e.target.gotoAndPlay(2);					}				public function overSearch(e:Event):void {						descBoardRollOver = true;			Mouse.show();			handMode.visible = false;					}				public function overBar(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;			TweenMax.to(close_mc, 1, {glowFilter:{color:0xEB2125, alpha:1, blurX:10, blurY:10}}); //0x91e600					}				public function outBar(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;			TweenMax.to(close_mc, 1, {glowFilter:{color:0xEB2125, alpha:0, blurX:10, blurY:10}}); //0x91e600		}				public function hideBar(e:Event):void {						close_mc.alpha = 1;			searchphile.visible = true;			searchphile_over.visible = false;			searching.visible = false;			control();			searchcontrol();			create3DGallery();			stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);						trace("reset here") ;			init_resetList();			stage.addEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.addEventListener(MouseEvent.MOUSE_DOWN, stageDown);			stage.addEventListener(MouseEvent.CLICK, stageUp);			stage.addEventListener(MouseEvent.CLICK, stageDown);								}				private function MenuOver(e:Event):void		{			descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;		}				private function MenuOut(e:Event):void		{			descBoardRollOver = false;			e.target.gotoAndPlay(21);			Mouse.hide();			handMode.visible = true;		}						public function showMenu(e:Event):void {						menu.visible = false;						menu_close.visible = true;			menu_close.alpha = 1;			Tweener.addTween(menu_close, {alpha: 1, time:.5, transition: "easeOutQuint"});			TweenMax.to(menu_close, 1, {glowFilter:{color:0xb50609, alpha:0.1, blurX:10, blurY:10}}); //0x91e600							stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);			stage.removeEventListener(MouseEvent.CLICK, stageUp);			stage.removeEventListener(MouseEvent.CLICK, stageDown);								}						public function hideMenu(e:Event):void {						menu_close.visible = false;						menu.visible = true;			Tweener.addTween(menu_close, {alpha: 1, time:.5, transition: "easeOutQuint"});			TweenMax.to(menu, 1, {glowFilter:{color:0xffffff, alpha:1, blurX:60, blurY:60}}); //0x91e600			stage.removeEventListener(MouseEvent.MOUSE_UP, stageUp);			stage.removeEventListener(MouseEvent.MOUSE_DOWN, stageDown);			stage.removeEventListener(MouseEvent.CLICK, stageUp);			stage.removeEventListener(MouseEvent.CLICK, stageDown);								}						public function closeMe(e:Event):void {						descBoardRollOver = true;			e.target.gotoAndPlay(2);			Mouse.show();			handMode.visible = false;		}				public function noClose(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);			closeBtnOut.visible = true;			closeBtnOver.visible = false;			Mouse.show();			handMode.visible = false;					}				//_____________________________________________ PLANE INTERACTIVE				private function onItemRelease(e:InteractiveScene3DEvent):void		{						var p:Plane = e.target as Plane;			// Display item			trace(currentItem + ":" + p.extra.index) ;			if (currentItem != p.extra.index) 			{				currentItem = p.extra.index;				displayItem(currentItem);			}			// Or bring back			else			{				currentItem = -1;				itemSelected = false;				for (var i:uint = 0; i < TOTAL; i++)				{					p = scene.getChildByName("item" + i) as Plane;					Tweener.addTween([p, p.extra.reflection],							{	z:0, 								time:2,								onUpdate:function():void										{											// Render 3D											renderer.renderScene(scene, camera, viewport);										}							});				}				setUpMouseMove();				// Hide category board				Tweener.addTween(descBoard,									{	alpha:0, 									x: descBoard.x+550,									time:1,									onUpdate:function():void									{										descBoard.visible = false;									}										});												}						forward.visible = true;			backward.visible = true;			Tweener.addTween(forward, {y: stage.stageHeight-50, alpha: 1, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});			Tweener.addTween(backward, {y: stage.stageHeight-50, alpha: 1, time: 1, delay: 0.25, transition: "Elastic.easeInOut"});					}				private function onItemRollOver(e:InteractiveScene3DEvent):void		{			if (!openMode)			{				handMode.visible = false;				Mouse.show();			}			itemRollOver = true;					}				private function onItemRollOut(e:InteractiveScene3DEvent):void		{			if (!openMode)			{				handMode.visible = true;				Mouse.hide();			}			itemRollOver = false;		}				public function controlMenu():void {								addChild(_searchOut);				_searchOut.x = stage.stageWidth/2 + 120;				_searchOut.y = stage.stageHeight + 160;				_searchOut.alpha = 0;				_searchOut.visible = false;				_searchOut.addEventListener(MouseEvent.MOUSE_OVER, mySearchOver);				_searchOut.addEventListener(MouseEvent.MOUSE_DOWN, mySearchDown);				_searchOut.addEventListener(MouseEvent.MOUSE_OUT, mySearchOut);								addChild(close_mc);				close_mc.x = stage.stageWidth/2 - 130;				close_mc.y = stage.stageHeight + 60;				close_mc.alpha = 1;				close_mc.visible = false;								addChild(_controlp);				_controlp.x = stage.stageWidth/2;				_controlp.y = stage.stageHeight + 160;				_controlp.addEventListener(MouseEvent.MOUSE_OVER, overSearch);								search.x = stage.stageWidth/2;				search.y = stage.stageHeight + 160;				search.addEventListener(MouseEvent.MOUSE_OVER, overSearch);								addChild(helphile);				helphile.x = stage.stageWidth/2 + 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				helphile.y = stage.stageHeight+300;				helphile.buttonMode = true;				helphile.mouseChildren = false;				helphile.addEventListener(MouseEvent.MOUSE_OVER, helpOver);								addChild(helphile_over);				helphile_over.visible = false;				helphile_over.x = stage.stageWidth/2 + 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				helphile_over.y = stage.stageHeight+300;				helphile_over.buttonMode = true;				helphile_over.mouseChildren = false;				helphile_over.addEventListener(MouseEvent.MOUSE_OUT, helpOut);				helphile_over.addEventListener(MouseEvent.CLICK, home_page);								addChild(audiophile_selected);				audiophile_selected.visible = true;				audiophile_selected.alpha = 1;				audiophile_selected.x = stage.stageWidth/2 - 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				audiophile_selected.y = stage.stageHeight+300;				audiophile_selected.buttonMode = true;				audiophile_selected.mouseChildren = false;				audiophile_selected.addEventListener(MouseEvent.MOUSE_OVER, overSearch);								addChild(videophile);				videophile.x = stage.stageWidth/2 - 58; // + 140 (stage.stageWidth/2)+(stage.stageWidth/2*.97);				videophile.y = stage.stageHeight+300;				videophile.buttonMode = true;				videophile.mouseChildren = false;				videophile.addEventListener(MouseEvent.MOUSE_OVER, videoOver);								addChild(videophile_over);				videophile_over.visible = false;				videophile_over.x = stage.stageWidth/2 - 58; //+ 140(stage.stageWidth/2)+(stage.stageWidth/2*.97);				videophile_over.y = stage.stageHeight+300;				videophile_over.buttonMode = true;				videophile_over.mouseChildren = false;				videophile_over.addEventListener(MouseEvent.MOUSE_OUT, videoOut);				videophile_over.addEventListener(MouseEvent.CLICK, video_page);								addChild(searchphile);				searchphile.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				searchphile.y = stage.stageHeight+300;				searchphile.buttonMode = true;				searchphile.mouseChildren = false;				searchphile.addEventListener(MouseEvent.MOUSE_OVER, searchOver);								addChild(searchphile_over);				searchphile_over.visible = false;				searchphile_over.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				searchphile_over.y = stage.stageHeight+300;				searchphile_over.buttonMode = true;				searchphile_over.mouseChildren = false;				searchphile_over.addEventListener(MouseEvent.MOUSE_OUT, searchOut);				searchphile_over.addEventListener(MouseEvent.CLICK, searchMc);								addChild(searching);				searching.visible = false;				searching.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				searching.y = stage.stageHeight+300;				searching.buttonMode = true;				searching.addEventListener(MouseEvent.MOUSE_OVER, overSearch);								addChild(uploadphile);				uploadphile.x = stage.stageWidth/2; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				uploadphile.y = stage.stageHeight+300;				uploadphile.buttonMode = true;				uploadphile.mouseChildren = false;				uploadphile.addEventListener(MouseEvent.MOUSE_OVER, uploadOver);								addChild(uploadphile_over);				uploadphile_over.visible = false;				uploadphile_over.x = stage.stageWidth/2; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				uploadphile_over.y = stage.stageHeight+300;				uploadphile_over.buttonMode = true;				uploadphile_over.mouseChildren = false;				uploadphile_over.addEventListener(MouseEvent.MOUSE_OUT, uploadOut);				uploadphile_over.addEventListener(MouseEvent.CLICK, upload_page);								addChild(backward);				backward.alpha = 0;				backward.x = stage.stageWidth/2-191; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				backward.y = stage.stageHeight-50;				backward.buttonMode = true;				backward.mouseChildren = false;				backward.addEventListener(MouseEvent.MOUSE_OVER, backOver);				backward.addEventListener(MouseEvent.MOUSE_OUT, backOut);				backward.addEventListener(MouseEvent.CLICK, PreviousItem);								addChild(forward);				forward.alpha = 0;				forward.x = stage.stageWidth/2+191; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);				forward.y = stage.stageHeight-50;				forward.buttonMode = true;				forward.mouseChildren = false;				forward.addEventListener(MouseEvent.MOUSE_OVER, forwardOver);				forward.addEventListener(MouseEvent.MOUSE_OUT, forwardOut);				forward.addEventListener(MouseEvent.CLICK, NextItem);									}						//________________________________________________ OPEN EFFECT				private function openEffect():void		{			// Category board			addChild(descBoard);			descBoard.x = stage.stageWidth / 2;			descBoard.y = stage.stageHeight / 2-20;			descBoard.visible = false;			cameraCenter =  (TOTAL - 1) * itemDistance / 2;			var action:Object = {		rotationY:40,										x:(TOTAL - 1) * itemDistance,										time:3,										transition:"easeInQuint",										onUpdate:function():void										{											// Render 3D											renderer.renderScene(scene, camera, viewport);																					},										onComplete:function():void										{											demoEnded = true;											Tweener.addTween(camera,{	x:cameraCenter,																		rotationY:0,																		time:3,																		onUpdate:function():void																		{																			// Render 3D																			renderer.renderScene(scene, camera, viewport);																													},																		onComplete:function():void																		{																			setUpMouseMove();																		}																	}); 										}							}				Tweener.addTween(camera, action);					}						//_________________________________________________ SET UP MOUSE MOVE HANDLER				private function setUpMouseMove():void		{			stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);					}				private function mouseMoveHandler(e:Event):void		{			var deltaY:Number = (stage.mouseX - stage.stageWidth * .5) / CAMDELTA;			//var deltaX:Number = -(stage.mouseY - stage.stageHeight * .5) / CAMDELTA;			Tweener.addTween(camera,{	rotationY: deltaY,										time:1,										onUpdate:function():void										{											// Render 3D											renderer.renderScene(scene, camera, viewport);																					}									});								}				public function closeUp(e:Event):void {						descBoardRollOver = false;			e.target.gotoAndPlay(21);						Tweener.addTween(forward, {alpha: 0, time: .5, delay: 0.25, transition: "Elastic.easeInOut"});			Tweener.addTween(backward, {alpha: 0, time: .5, delay: 0.25, transition: "Elastic.easeInOut"});						setupStageMouseUp();			setupStageMouseDown();		}						public function closeOver(e:Event):void {			trace("close over") ;			TweenMax.to(descBoard.close_button, 1, {glowFilter:{color:0xFF0000, alpha:1, blurX:30, blurY:30}}); //0x91e600					}				public function init_resetList():void{						if (search.search_txt.length > 0) { //if( textField.text.length > 0 )							//create3DGallery();				position = 1;						}						if (search.search_txt.length = 0) { //if( textField.text.length > 0 )							//create3DGallery();				position = 1;						}						var _numCrrntLists:int = meta5.getCollection().length ;			for (var i:int = 0; i <= _numCrrntLists  ; i++) {				scene.removeChildByName("item" + i) ;				scene.removeChildByName("reflection" + i) ;			}						_numCrrntLists = meta5Search.getCollection().length ;			for (i = 0; i <= _numCrrntLists  ; i++) {				scene.removeChildByName("item" + i) ;				scene.removeChildByName("reflection" + i) ;			}			// Create 3D Gallery			create3DGallery();			position = 1;		}				public function resetList(e:Event):void {						trace('resetList') ;			//***LOOP OVER ALL PLAYLIST AND REMOVE***			var _numCrrntLists:int = meta5.getCollection().length ;			for (var i:int = 0; i <= _numCrrntLists  ; i++) {				scene.removeChildByName("item" + i) ;				scene.removeChildByName("reflection" + i) ;			}						_numCrrntLists = meta5Search.getCollection().length ;			for (i = 0; i <= _numCrrntLists  ; i++) {				scene.removeChildByName("item" + i) ;				scene.removeChildByName("reflection" + i) ;			}			// Create 3D Gallery			create3DGallery();			position = 1;					}				public function closeOut(e:Event):void {						TweenMax.to(descBoard.close_button, 1, {glowFilter:{color:0xEB2125, alpha:0, blurX:30, blurY:30}}); //0x91e600					}				// Mouse DOWN on stage		private function setupStageMouseDown():void		{			stage.addEventListener(MouseEvent.MOUSE_DOWN, stageDown);			hand.visible = false;			trace("hand down");		}				// Mouse UP on stage		private function setupStageMouseUp():void		{			stage.addEventListener(MouseEvent.MOUSE_UP, stageUp);				}				private function stageDown(e:Event):void		{			if (!itemRollOver && displayItem && !descBoardRollOver && demoEnded && !itemSelected && !openMode)			{				handMode = handDrag;				handMode.visible = true;				hand.visible = false;				handMode.x = mouseX;					handMode.y = mouseY;				dragMode = true;				stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);			}		}				private function stageUp(e:Event):void		{			dragMode = false;			removeEventListener(Event.ENTER_FRAME, easingDrag);			if (!itemRollOver && !descBoardRollOver && !itemSelected && !openMode)			{								handMode = hand;				handMode.visible = true;				handDrag.visible = false;				handMode.x = mouseX;					handMode.y = mouseY;				stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);			}			// Bring camera to original position			if (!itemRollOver && !descBoardRollOver && demoEnded && itemSelected && !openMode)			{				stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);				itemSelected = false;				for (var i:uint = 0; i < TOTAL; i++)				{					var p:Plane = scene.getChildByName("item" + i) as Plane;					Tweener.addTween([p, p.extra.reflection],							{	z:0, 								time:2,								onUpdate:function():void										{											// Render 3D											renderer.renderScene(scene, camera, viewport);										}							});				}				setUpMouseMove();				// Hide category board				Tweener.addTween(descBoard,									{	alpha:0, 									time:1,									onUpdate:function():void									{										descBoard.visible = false;									}										});							}								}				//__________________________________________ LOADING PROGRESS ( FULL VERSION )				private function startPreloading(e:Event):void		{			// Easing preloading update data			addEventListener(Event.ENTER_FRAME, progressUpdate);		}				private function progressUpdate(e:Event):void		{			preloaderEach.progressBar.width += (bytesLoaded / bytesTotal * stage.stageWidth - preloaderEach.progressBar.width) * 0.1;			//if (preloaderEach.progressBar.width / stage.stageWidth >= 0.99) fullLoaded();			}				private function progressData(e:Event):void		{			bytesLoaded = e.target.bytesLoaded;			bytesTotal = e.target.bytesTotal;		}				//__________________________________________ APPLY STYLE SHEET					private function initStyleSheet():void		{			// load external css			var req:URLRequest = new URLRequest(css_path);			var loader:URLLoader = new URLLoader();			loader.load(req);			loader.addEventListener(Event.COMPLETE, cssLoaded);			// Adding text link event			addEventListener(TextEvent.LINK, clickText);		}				private function clickText(li:TextEvent):void		{			var myURL:URLRequest = new URLRequest(li.text);			navigateToURL(myURL,"_blank");		}					private function cssLoaded(e:Event):void		{			css.parseCSS(e.target.data);			fullDescription.content.styleSheet = css;		}				//__________________________________________ MOUSE MOVE WITH HAND CURSOR				private function mouseMove(e:MouseEvent):void		{			if (dragMode) 			{				targetX = (mouseX - stage.stageWidth / 2) * dragSpeed;				addEventListener(Event.ENTER_FRAME, easingDrag, false, 0, true);			}			handMode.x = mouseX;				handMode.y = mouseY;					}				private function easingDrag(e:Event):void		{			camera.x += targetX;			camera.x = (camera.x < 0) ? 0 : camera.x;			camera.x = (camera.x > maxX) ? maxX : camera.x;			renderer.renderScene(scene, camera, viewport);			}				//__________________________________________ REPOSITION				private function rePosition(e:Event):void		{			//preloaderEach.progressBar.width = preloaderEach.backPreloader.width = stage.stageWidth;			descBoard.x = stage.stageWidth/2 - 63; //(descBoard.stage.stageWidth / 2) - (descBoard.width/7.2);			descBoard.y = (descBoard.stage.stageHeight / 2) - (descBoard.height/2.32);						window_resize();			helphile.x = stage.stageWidth/2 + 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			helphile.y = stage.stageHeight-50;			helphile_over.x = stage.stageWidth/2 + 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			helphile_over.y = stage.stageHeight-50;			audiophile.x = stage.stageWidth/2 - 116; //+70			audiophile.y = stage.stageHeight-50;			audiophile_selected.x = stage.stageWidth/2 - 116; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			audiophile_selected.y = stage.stageHeight-50;			videophile.x = stage.stageWidth/2 - 58; // + 140 (stage.stageWidth/2)+(stage.stageWidth/2*.97);			videophile.y = stage.stageHeight-50;			videophile_over.x = stage.stageWidth/2 - 58; //+ 140(stage.stageWidth/2)+(stage.stageWidth/2*.97);			videophile_over.y = stage.stageHeight-50;			searchphile.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			searchphile.y = stage.stageHeight-50;			searchphile_over.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			searchphile_over.y = stage.stageHeight-50;			searching.x = stage.stageWidth/2 + 58; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			searching.y = stage.stageHeight+300;			uploadphile.x = stage.stageWidth/2; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			uploadphile.y = stage.stageHeight-50;			uploadphile_over.x = stage.stageWidth/2; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			uploadphile_over.y = stage.stageHeight-50;			_controlp.x = stage.stageWidth/2;			_controlp.y = stage.stageHeight - 50;						backward.x = stage.stageWidth/2-191; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			backward.y = stage.stageHeight-50;			forward.x = stage.stageWidth/2+191; //(stage.stageWidth/2)+(stage.stageWidth/2*.97);			forward.y = stage.stageHeight-50;							/* menu controls */			search.x = stage.stageWidth/2;			search.y = stage.stageHeight + 160;			close_mc.x = stage.stageWidth/2 - 190;			close_mc.y = stage.stageHeight + 60;			_searchOut.x = stage.stageWidth/2 + 115;			_searchOut.y = stage.stageHeight + 160;			menu.x = (menu.stage.stageWidth / 2) + (stage.stageWidth/2*.96);			menu.y = (menu.stage.stageHeight / 2) + (stage.stageHeight/2*.93);			menu_close.x = (menu_close.stage.stageWidth / 2) + (stage.stageWidth/2*.96);			menu_close.y = (menu_close.stage.stageHeight / 2) + (stage.stageHeight/2*.928);					}				public function window_resize():void {			if (stage.stageWidth<=1030) {								addChild(warning_screen);				warning_screen.x = stage.stageWidth/2;				warning_screen.y = stage.stageHeight/2;				warning_screen.visible = true;							} else {						warning_screen.visible = false;						}								}					}}