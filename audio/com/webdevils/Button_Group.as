// Button_Group Class -- last edited 102108package com.webdevils {    import flash.events.*;    import flash.display.*;    public class Button_Group {        private var button_array:Array;        private var selected_button;		private var _index:int;        private var disabled_string:String;        // ------------------------- Constructor --------------------------        public function Button_Group( _array:Array, select:int = -1, _disabled:String = "disabled" ) {            button_array = _array;            disabled_string = _disabled;            init_group();            if ( select > -1 ) {                selected_button = select;                select_button( selected_button );            }     			_index = select;        }               // ------------------------ Private Methods -----------------------        private function init_group():void {            for ( var i = 0; i < button_array.length; i++ ) {                button_array[i].stop();                button_array[i].mouseChildren = false;                button_array[i].buttonMode = true;                button_array[i].addEventListener( MouseEvent.CLICK, on_click );            }        }               private function on_click( e:MouseEvent ):void {            if ( selected_button != -1 ) {                deselect_button( selected_button );            }            disable_button_by_reference( e.currentTarget );        }               private function select_button( index:uint ):void {            button_array[ index ].mouseEnabled = false;            button_array[ index ].buttonMode = false;            button_array[ index ].gotoAndStop( disabled_string );			_index = index;        }               private function deselect_button( index:uint ):void {             button_array[ index ].gotoAndStop( "_up" );            button_array[ index ].mouseEnabled = true;            button_array[ index ].buttonMode = true;        }               // ---------------------- Public Methods -----------------------------		public function get index():int {			return _index;		}				public function next_button():void {			_index ++;			if ( _index == button_array.length ) {				_index = 0;			}			disable_button_by_index( _index );			trace( selected_button + " " + _index );		}				public function prev_button():void {			_index --;			if ( _index < 0 ) {				_index = button_array.length - 1;			}			disable_button_by_index( _index );			trace( selected_button + " " + _index );		}				        public function enable_all_buttons():void {            for ( var i = 0; i < button_array.length; i++ ) {                deselect_button( i );            }            selected_button = -1;        }               public function disable_all_buttons():void {            for ( var i = 0; i < button_array.length; i++ ) {                select_button( i );            }            selected_button = -1;        }               public function disable_button_by_index( index:uint, _deselect:Boolean = true ):void {            if ( _deselect ) {                deselect_button( selected_button );            }            selected_button = index;            select_button( selected_button );        }               public function disable_button_by_reference( _mc, _deselect:Boolean = true ):void {            if ( _deselect && selected_button > -1 ) {                deselect_button( selected_button );            }            for ( var i = 0; i < button_array.length; i++ ) {                if ( button_array[i] == _mc ) {                    selected_button = i;                    select_button( selected_button );                    break;                }            }        }               public function enable_button_by_index( index:uint ):void {            if ( selected_button == index ) {                selected_button = -1;            }            deselect_button( selected_button );        }               public function enable_button_by_reference( _mc ):void {            for ( var i = 0; i < button_array.length; i++ ) {                if ( button_array[i] == _mc ) {                    if ( selected_button == i ) {                        selected_button = -1;                    }                    deselect_button( selected_button );                    break;                }            }        }				public static function setup_button( _mc:MovieClip ):void {			_mc.stop();			_mc.buttonMode = true;		}    }}